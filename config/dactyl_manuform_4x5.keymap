#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

#define HYPER(key) LS(LC(LA(LG(key))))
#define MEH(key)   LS(LC(LA(key)))

&sl { release-after-ms = <5000>; };

&kscan0 {
    debounce-press-ms = <30>;
    debounce-release-ms = <30>;
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        win {
            bindings = <&kp LEFT_WIN>;
            key-positions = <20 21>;
        };

        k1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <0 28>;
        };

        n2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <28 2>;
        };

        n3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <28 3>;
        };

        to1 {
            bindings = <&mo 1>;
            key-positions = <28 29>;
        };

        to2 {
            bindings = <&mo 2>;
            key-positions = <32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R           &kp T           &kp Y      &kp U  &kp I  &kp O      &kp P
&kp A  &kp S  &kp D  &kp F           &kp G           &kp H      &kp J  &kp K  &kp L      &kp BACKSPACE
       &kp X  &kp C  &kp V           &kp B           &kp N      &kp M  &kp Z  &kp ENTER
                     &kp LEFT_SHIFT  &kp SPACE       &mo 3      &mo 1
                     &kp LCTRL       &kp LEFT_ALT    &kp ENTER  &mo 2
            >;
        };

        lower_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6    &kp N7          &kp N8  &kp N9     &kp N0
&kp TAB       &trans        &trans        &trans        &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP  &kp RIGHT  &kp F12
              &trans        &trans        &trans        &trans    &trans          &trans          &trans  &trans
                                          &kp LEFT_WIN  &trans    &trans          &trans
                                          &trans        &trans    &trans          &trans
            >;
        };

        adjust_layer {
            bindings = <
&kp F1          &kp F2        &kp F3        &kp F4          &kp F5          &kp F6  &kp F7  &kp F8  &kp F9   &kp F10
&kp LEFT_SHIFT  &out OUT_USB  &out OUT_BLE  &trans          &trans          &trans  &trans  &trans  &kp F11  &kp F12
                &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &trans  &trans  &trans  &trans
                                            &kp LEFT_SHIFT  &trans          &trans  &trans
                                            &trans          &trans          &trans  &trans
            >;
        };

        raise_layer {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR     &kp PERCENT             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS         &kp EQUAL          &kp DELETE
&none            &none        &kp CARET  &kp AMPERSAND  &kp ASTERISK            &kp SEMICOLON         &kp SQT                &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp QUESTION
                 &trans       &trans     &kp GRAVE      &kp NON_US_BACKSLASH    &kp COMMA             &kp PERIOD             &kp LESS_THAN     &kp GREATER_THAN
                                         &trans         &trans                  &trans                &kp LEFT_SHIFT
                                         &trans         &trans                  &trans                &trans
            >;
        };
    };
};
